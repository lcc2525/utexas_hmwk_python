python -m http.server --cgi 8000

// Step 1: Set up our chart
//= ================================
var svgWidth = 960;
var svgHeight = 500;

var margin = {
  top: 20,
  right: 40,
  bottom: 60,
  left: 50
};

var width = svgWidth - margin.left - margin.right;
var height = svgHeight - margin.top - margin.bottom;

// Step 2: Create an SVG wrapper,
// append an SVG group that will hold our chart,
// and shift the latter by left and top margins.
// =================================
var svg = d3.select("body")
  .append("svg")
  .attr("width", svgWidth)
  .attr("height", svgHeight);

var chartGroup = svg.append("g")
  .attr("transform", `
  
// Line generator for morning data
  var line1 = d3.line()
    .x(d => xTimeScale(d.date))
    .y(d => yLinearScale(d.morning));
	
// Format the data
  mojoData.forEach(function(data) {
    data.date = parseTime(data.date);
    data.morning = +data.morning;
    data.evening = +data.evening;
	
// Initial Params choses the x axix  
var chosenXAxis = "hair_length";
	
//removes values in svg
if (!svgArea.empty()) {
    svgArea.remove();
  }
// mouse listener
// event listener for mouseover
        // .on("mouseover", function() {
        //   d3.select(this)
        //         .attr("fill", "red");
        // })
        // // event listener for mouseout
        // .on("mouseout", function() {
        //   d3.select(this)
        //         .attr("fill", "green");
        // });
//even listener for click, message	
   // event listener for onclick event
        .on("click", function(d, i) {
          alert(`Hey! You clicked bar ${dataCategories[i]}!`);
        })
		
this - generic variable, this thing we have
